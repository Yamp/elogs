version: '3.7'

volumes:
  production_caddy:
  pg_data:

services:
  postgres:
    image: "postgres"
    expose:
      - "5432"
    volumes:
      - ./docker/postgres/init_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data

  redis:
    image: "redis"
    hostname: "redis"
    expose:
      - "6379"

  django:
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    image: yampolskiydv/elogs_back
    container_name: django_cont
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
      - celery
      - celery-beat
    command:
      - /entrypoint
#    volumes:
#      - ./:/srv/

  migrator:
    image: yampolskiydv/elogs_back
    container_name: migrator_cont
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
    entrypoint: '/apply_migrations.sh'

  constructor:
    build: e-logs-constructor
    init: true

  caddy:
    build:
      context: .
      dockerfile: ./docker/caddy/Dockerfile
    image: elogs_prod_caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddy
    env_file:
      - ./.env
    ports:
      - "8085:8085"
      - "8000:8000"
      - "80:80"
      - "443:443"

  celery:
    image: yampolskiydv/elogs_back
    container_name: celery_cont
    env_file:
      - ./.env
    command: celery -A e_logs.common.all_journals_app.tasks worker --loglevel=info
    depends_on:
      - postgres
      - redis
    restart: on-failure

  celery-beat:
    image: yampolskiydv/elogs_back
    container_name: celery_beat_cont
    env_file:
      - ./.env
    command: celery -A e_logs.common.all_journals_app.tasks beat --loglevel=info --scheduler=django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - postgres
      - redis
    restart: on-failure
